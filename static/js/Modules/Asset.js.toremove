//=================================
// Asset.js
// 资源页面
//=================================
define(['../UIBase/index', '../UIBase/Mixin/index', './Hub'], function(require, exports, module){

	var UIBase = require('../UIBase/index');
	UIBase.Mixin = require('../UIBase/Mixin/index');
	var hub = require('./Hub').getInstance();

	function create(name){

		var view = new UIBase.Panel.View;
		view.setName(name);
		view.$el.addClass('asset');

		UIBase.Mixin.Scrollable.applyTo( view );
		
		handleHubEvent(view);

		initView(view);

		return {
			view : view
		}
	}

	var itemTemplate = '<li class="asset-item" draggable="true">\
								<img class="thumb" src="{{thumb}}" draggable="true"/>\
								<h5>{{name}}</h5>\
							</li>';

	function handleHubEvent(view){
	
		hub.on('add:asset:mesh', function(list){
			if( ! list ){
				return;
			}
			var $ul = view.findByName('Mesh').$el.find('ul.asset-list');

			addList(list, $ul, 'mesh');

			hub.trigger('added:assetlist:mesh');
		})

		hub.on('add:asset:geometry', function(list){
			if( ! list ){
				return;
			}
			var $ul = view.findByName('Geometry').$el.find('ul.asset-list');

			addList(list, $ul, 'geometry');

			hub.trigger('added:assetlist:geometry');
		})

		hub.on('add:asset:material', function(list){
			if( ! list ){
				return;
			}
			var $ul = view.findByName('Material').$el.find('ul.asset-list');

			addList(list, $ul, 'material');

			hub.trigger('added:assetlist:material');
		})

		hub.on('add:asset:texture', function(list){
			if( ! list ){
				return;
			}
			var $ul = view.findByName('Texture').$el.find('ul.asset-list');

			addList(list, $ul, 'texture');

			hub.trigger('added:assetlist:texture');
		})
	}

	//each item have three properties
	// name asset name
	// thumb asset thumb image url
	// uri asset uri
	function addList(list, $ul, type){

		_.each(list, function(item){
			var	$item = $( _.template(itemTemplate, {
					name : item.name,
					thumb : item.thumb || ""
				}) )
			
			// asset uri
			// like /project/mesh/meshname (native uri)
			// or 	http://xxxxxxxxx/mesh/meshname
			$item.data('uri', item.uri);
			$item.data('type', type);

			$ul.append($item);

			// use drag and drop api
			// https://developer.mozilla.org/en-US/docs/DragDrop/Drag_and_Drop
			// https://developer.mozilla.org/en-US/docs/DragDrop/DataTransfer
			// http://www.html5rocks.com/en/tutorials/dnd/basics/
			// 
			// todo 为什么移动里面的图片可以出发事件但是设置dataTransfer为copy没效果
			$item[0].addEventListener('dragstart', function(e){
				// transfer the uri data
				e.dataTransfer.setData('text/plain', JSON.stringify({
					uri : item.uri,
					type : type
				}) );
				$(this).addClass('ondrag');
			})
			$item[0].addEventListener('dragend', function(e){
				$(this).removeClass('ondrag');
			})
		})

	}

	function initView(view){

		view.appendView( createMeshLayer() );

		view.appendView( createGeoLayer() );

		view.appendView( createMaterialLayer() );

		view.appendView( createTextureLayer() );
	}

	function createMeshLayer(){
		var meshLayerView = new UIBase.Layer.View;
		meshLayerView.setName('Mesh');
		meshLayerView.$el.addClass('asset-mesh');
		meshLayerView.$list.append('<ul class="asset-list"></ul>');

		UIBase.Mixin.Collapsable.applyTo(meshLayerView);

		return meshLayerView;
	}

	function createGeoLayer(){
		var geoLayerView = new UIBase.Layer.View;
		geoLayerView.setName('Geometry');
		geoLayerView.$el.addClass('asset-geometry');
		geoLayerView.$list.append('<ul class="asset-list"></ul>');

		UIBase.Mixin.Collapsable.applyTo(geoLayerView);

		return geoLayerView;

	}

	function createMaterialLayer(){
		var materialLayerView = new UIBase.Layer.View;
		materialLayerView.setName('Material');
		materialLayerView.$el.addClass('asset-material');
		materialLayerView.$list.append('<ul class="asset-list"></ul>');

		UIBase.Mixin.Collapsable.applyTo(materialLayerView);

		return materialLayerView;
	}

	function createTextureLayer(){
		var textureLayerView = new UIBase.Layer.View;
		textureLayerView.setName('Texture');
		textureLayerView.$el.addClass('asset-texture');
		textureLayerView.$list.append('<ul class="asset-list"></ul>');

		UIBase.Mixin.Collapsable.applyTo(textureLayerView);

		return textureLayerView;
	}

	return {
		create : create
	}
})